version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
     - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
     - "9092:9092"
    expose:
     - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "mktDataStream:1:1"
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock

  producer:
    build:
      context: ./ibkr_pipeline
      dockerfile: Dockerfile
    image: julesthecomputernerd/ibkr_pipeline_producer:latest
    depends_on:
      - kafka
      - zookeeper
    restart: unless-stopped
    command: uvicorn app.main:app --workers 1 --host 0.0.0.0 --port 8000
    volumes:
      - ./ibkr_pipeline/producer/:/usr/src/app
    ports:
      - 8002:8000
    env_file:
      - ./ibkr_pipeline/.env

  timescaledb:
    image: timescale/timescaledb-ha
    restart: always
    ports:
      - 5432:5432
      environment:
        POSTGRES_USER: timescaledb
        POSTGRES_PASSWORD: password
      volumes:
        - /data/timescaledb:/var/lib/postgresql/data